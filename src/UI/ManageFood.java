/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package UI;

import DB.DBCategory;
import DB.DBFood;
import DB.DBUser;
import java.awt.Image;
import static java.awt.PageAttributes.MediaType.B;
import java.awt.image.BufferedImage;
import java.io.ByteArrayInputStream;
import java.io.File;
import java.io.InputStream;
import java.sql.Blob;
import java.sql.ResultSet;
import java.util.List;
import javax.imageio.ImageIO;
import javax.sql.rowset.serial.SerialBlob;
import javax.swing.DefaultComboBoxModel;
import javax.swing.ImageIcon;
import javax.swing.JFileChooser;
import javax.swing.filechooser.FileNameExtensionFilter;
import javax.swing.table.DefaultTableModel;
import main.Category;
import main.Food;
import main.User;

/**
 *
 * @author Faroos
 */
public class ManageFood extends javax.swing.JFrame {

    /**
     * Creates new form ManageFood
     */
    public ManageFood() {
        initComponents();
        txtcmsg.setVisible(false);
        txtcmsg1.setVisible(false);        
        txtpmsg.setVisible(false);
        txtpmsg1.setVisible(false);
        txtpmsg2.setVisible(false);


        getLastId();
        getAllCategories();
        setCategories();
        
        
        getLastFoodId();
        getAllFoods();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        mainPanel = new javax.swing.JPanel();
        Heading = new javax.swing.JLabel();
        jSeparator1 = new javax.swing.JSeparator();
        btnExit = new javax.swing.JLabel();
        txtFooter = new javax.swing.JLabel();
        btnUpdateCategory = new javax.swing.JLabel();
        btnAddcategory = new javax.swing.JLabel();
        jPanel2 = new javax.swing.JPanel();
        foodTab = new javax.swing.JTabbedPane();
        addCategory = new javax.swing.JPanel();
        txtTitle = new javax.swing.JLabel();
        jLabel1 = new javax.swing.JLabel();
        txtcid = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        txtcname = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        txtcdesc = new javax.swing.JTextArea();
        btnCsubmit = new javax.swing.JLabel();
        txtcmsg = new javax.swing.JLabel();
        updateCategory = new javax.swing.JPanel();
        txtTitle2 = new javax.swing.JLabel();
        jScrollPane2 = new javax.swing.JScrollPane();
        tblCategory = new javax.swing.JTable();
        btnView = new javax.swing.JLabel();
        jPanel1 = new javax.swing.JPanel();
        jLabel5 = new javax.swing.JLabel();
        txtcid1 = new javax.swing.JTextField();
        jLabel6 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        cmbAvailability = new javax.swing.JComboBox<>();
        txtcname1 = new javax.swing.JTextField();
        jLabel8 = new javax.swing.JLabel();
        jScrollPane3 = new javax.swing.JScrollPane();
        txtcdesc1 = new javax.swing.JTextArea();
        txtcmsg1 = new javax.swing.JLabel();
        btnUpdate = new javax.swing.JLabel();
        addFood = new javax.swing.JPanel();
        txtTitle3 = new javax.swing.JLabel();
        btnImage = new javax.swing.JLabel();
        imageView = new javax.swing.JLabel();
        btnSubmit = new javax.swing.JLabel();
        jLabel12 = new javax.swing.JLabel();
        jLabel13 = new javax.swing.JLabel();
        jLabel14 = new javax.swing.JLabel();
        jLabel15 = new javax.swing.JLabel();
        jLabel16 = new javax.swing.JLabel();
        jLabel17 = new javax.swing.JLabel();
        txtfid = new javax.swing.JTextField();
        txtfname = new javax.swing.JTextField();
        cmbCategory = new javax.swing.JComboBox<>();
        txtprice = new javax.swing.JTextField();
        txtquantity = new javax.swing.JTextField();
        cmbStatus = new javax.swing.JComboBox<>();
        txtpmsg = new javax.swing.JLabel();
        txtImageurl = new javax.swing.JTextField();
        ViewFoods = new javax.swing.JPanel();
        txtTitle4 = new javax.swing.JLabel();
        jScrollPane4 = new javax.swing.JScrollPane();
        tblFoods = new javax.swing.JTable();
        txtFoodSearch = new javax.swing.JTextField();
        btnViewFood = new javax.swing.JLabel();
        txtpmsg2 = new javax.swing.JLabel();
        UpdateFoods = new javax.swing.JPanel();
        jLabel18 = new javax.swing.JLabel();
        txtfid1 = new javax.swing.JTextField();
        jLabel19 = new javax.swing.JLabel();
        txtfname1 = new javax.swing.JTextField();
        jLabel20 = new javax.swing.JLabel();
        cmbCategory1 = new javax.swing.JComboBox<>();
        jLabel21 = new javax.swing.JLabel();
        txtprice1 = new javax.swing.JTextField();
        jLabel22 = new javax.swing.JLabel();
        txtquantity1 = new javax.swing.JTextField();
        jLabel23 = new javax.swing.JLabel();
        cmbStatus1 = new javax.swing.JComboBox<>();
        txtpmsg1 = new javax.swing.JLabel();
        btnPUpdate = new javax.swing.JLabel();
        btnImage1 = new javax.swing.JLabel();
        imageView1 = new javax.swing.JLabel();
        txtImageurl1 = new javax.swing.JTextField();
        Heading1 = new javax.swing.JLabel();
        Heading2 = new javax.swing.JLabel();
        btnAddFood = new javax.swing.JLabel();
        btnUpdateFoods = new javax.swing.JLabel();
        txtTitle1 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setResizable(false);

        mainPanel.setBackground(new java.awt.Color(51, 51, 51));
        mainPanel.setLayout(null);

        Heading.setFont(new java.awt.Font("Lucida Sans", 1, 24)); // NOI18N
        Heading.setForeground(new java.awt.Color(255, 255, 255));
        Heading.setText("&");
        mainPanel.add(Heading);
        Heading.setBounds(120, 70, 20, 29);

        jSeparator1.setOrientation(javax.swing.SwingConstants.VERTICAL);
        mainPanel.add(jSeparator1);
        jSeparator1.setBounds(250, 20, 12, 580);

        btnExit.setForeground(new java.awt.Color(255, 255, 0));
        btnExit.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        btnExit.setText("Exit");
        btnExit.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(255, 255, 51)));
        btnExit.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        btnExit.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                btnExitMouseClicked(evt);
            }
        });
        mainPanel.add(btnExit);
        btnExit.setBounds(60, 460, 140, 38);

        txtFooter.setFont(new java.awt.Font("Lucida Grande", 0, 10)); // NOI18N
        txtFooter.setForeground(new java.awt.Color(255, 255, 255));
        txtFooter.setText("Designed & Developed by Mohamed Faroos");
        mainPanel.add(txtFooter);
        txtFooter.setBounds(30, 560, 209, 21);

        btnUpdateCategory.setForeground(new java.awt.Color(255, 255, 0));
        btnUpdateCategory.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        btnUpdateCategory.setText("Update Category");
        btnUpdateCategory.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(255, 255, 51)));
        btnUpdateCategory.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        btnUpdateCategory.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                btnUpdateCategoryMouseClicked(evt);
            }
        });
        mainPanel.add(btnUpdateCategory);
        btnUpdateCategory.setBounds(60, 250, 140, 38);

        btnAddcategory.setForeground(new java.awt.Color(255, 255, 0));
        btnAddcategory.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        btnAddcategory.setText("Add Category");
        btnAddcategory.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(255, 255, 51)));
        btnAddcategory.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        btnAddcategory.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                btnAddcategoryMouseClicked(evt);
            }
        });
        mainPanel.add(btnAddcategory);
        btnAddcategory.setBounds(60, 180, 140, 38);

        jPanel2.setBackground(new java.awt.Color(51, 51, 51));

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 680, Short.MAX_VALUE)
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 50, Short.MAX_VALUE)
        );

        mainPanel.add(jPanel2);
        jPanel2.setBounds(260, 40, 680, 50);

        addCategory.setBackground(new java.awt.Color(51, 51, 51));
        addCategory.setLayout(null);

        txtTitle.setFont(new java.awt.Font("Lucida Grande", 1, 14)); // NOI18N
        txtTitle.setForeground(new java.awt.Color(255, 255, 255));
        txtTitle.setText("Add Category");
        addCategory.add(txtTitle);
        txtTitle.setBounds(280, 20, 97, 30);

        jLabel1.setForeground(new java.awt.Color(255, 255, 255));
        jLabel1.setText("Category ID");
        addCategory.add(jLabel1);
        jLabel1.setBounds(200, 110, 80, 16);

        txtcid.setEditable(false);
        addCategory.add(txtcid);
        txtcid.setBounds(190, 130, 270, 30);

        jLabel2.setForeground(new java.awt.Color(255, 255, 255));
        jLabel2.setText("Category");
        addCategory.add(jLabel2);
        jLabel2.setBounds(200, 190, 70, 16);
        addCategory.add(txtcname);
        txtcname.setBounds(190, 210, 270, 30);

        jLabel3.setForeground(new java.awt.Color(255, 255, 255));
        jLabel3.setText("Description");
        addCategory.add(jLabel3);
        jLabel3.setBounds(200, 270, 80, 16);

        txtcdesc.setColumns(20);
        txtcdesc.setRows(5);
        jScrollPane1.setViewportView(txtcdesc);

        addCategory.add(jScrollPane1);
        jScrollPane1.setBounds(190, 290, 270, 90);

        btnCsubmit.setFont(new java.awt.Font("Lucida Grande", 0, 15)); // NOI18N
        btnCsubmit.setForeground(new java.awt.Color(51, 204, 0));
        btnCsubmit.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        btnCsubmit.setText("Submit");
        btnCsubmit.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(51, 204, 0)));
        btnCsubmit.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                btnCsubmitMouseClicked(evt);
            }
        });
        addCategory.add(btnCsubmit);
        btnCsubmit.setBounds(280, 440, 80, 30);

        txtcmsg.setForeground(new java.awt.Color(255, 255, 255));
        txtcmsg.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        txtcmsg.setText("Msg");
        addCategory.add(txtcmsg);
        txtcmsg.setBounds(160, 400, 330, 20);

        foodTab.addTab("tab1", addCategory);

        updateCategory.setBackground(new java.awt.Color(51, 51, 51));
        updateCategory.setLayout(null);

        txtTitle2.setFont(new java.awt.Font("Lucida Grande", 1, 14)); // NOI18N
        txtTitle2.setForeground(new java.awt.Color(255, 255, 255));
        txtTitle2.setText("Edit Category");
        updateCategory.add(txtTitle2);
        txtTitle2.setBounds(279, 14, 97, 30);

        tblCategory.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Category ID", "Category", "Description", "Availability"
            }
        ));
        jScrollPane2.setViewportView(tblCategory);

        updateCategory.add(jScrollPane2);
        jScrollPane2.setBounds(20, 60, 530, 210);

        btnView.setForeground(new java.awt.Color(255, 255, 255));
        btnView.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        btnView.setText("View");
        btnView.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(255, 255, 255)));
        btnView.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                btnViewMouseClicked(evt);
            }
        });
        updateCategory.add(btnView);
        btnView.setBounds(570, 150, 70, 30);

        jPanel1.setBackground(new java.awt.Color(51, 51, 51));
        jPanel1.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(255, 255, 255)));
        jPanel1.setLayout(null);

        jLabel5.setForeground(new java.awt.Color(255, 255, 255));
        jLabel5.setText("Category ID");
        jPanel1.add(jLabel5);
        jLabel5.setBounds(30, 10, 80, 16);

        txtcid1.setEditable(false);
        jPanel1.add(txtcid1);
        txtcid1.setBounds(30, 30, 250, 30);

        jLabel6.setForeground(new java.awt.Color(255, 255, 255));
        jLabel6.setText("Category");
        jPanel1.add(jLabel6);
        jLabel6.setBounds(30, 80, 70, 16);

        jLabel7.setForeground(new java.awt.Color(255, 255, 255));
        jLabel7.setText("Availability");
        jPanel1.add(jLabel7);
        jLabel7.setBounds(30, 150, 70, 16);

        cmbAvailability.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Available", "Not Available" }));
        jPanel1.add(cmbAvailability);
        cmbAvailability.setBounds(30, 170, 250, 27);

        txtcname1.setEditable(false);
        jPanel1.add(txtcname1);
        txtcname1.setBounds(30, 100, 250, 30);

        jLabel8.setForeground(new java.awt.Color(255, 255, 255));
        jLabel8.setText("Description");
        jPanel1.add(jLabel8);
        jLabel8.setBounds(330, 10, 80, 16);

        txtcdesc1.setColumns(20);
        txtcdesc1.setRows(5);
        jScrollPane3.setViewportView(txtcdesc1);

        jPanel1.add(jScrollPane3);
        jScrollPane3.setBounds(330, 30, 270, 100);

        txtcmsg1.setForeground(new java.awt.Color(255, 255, 255));
        txtcmsg1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        txtcmsg1.setText("Msg");
        jPanel1.add(txtcmsg1);
        txtcmsg1.setBounds(90, 210, 430, 20);

        btnUpdate.setFont(new java.awt.Font("Lucida Grande", 0, 15)); // NOI18N
        btnUpdate.setForeground(new java.awt.Color(51, 204, 0));
        btnUpdate.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        btnUpdate.setText("Update");
        btnUpdate.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(51, 204, 0)));
        btnUpdate.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                btnUpdateMouseClicked(evt);
            }
        });
        jPanel1.add(btnUpdate);
        btnUpdate.setBounds(420, 160, 80, 30);

        updateCategory.add(jPanel1);
        jPanel1.setBounds(20, 280, 630, 240);

        foodTab.addTab("tab2", updateCategory);

        addFood.setBackground(new java.awt.Color(51, 51, 51));
        addFood.setLayout(null);

        txtTitle3.setFont(new java.awt.Font("Lucida Grande", 1, 14)); // NOI18N
        txtTitle3.setForeground(new java.awt.Color(255, 255, 255));
        txtTitle3.setText("Add Food");
        addFood.add(txtTitle3);
        txtTitle3.setBounds(290, 10, 88, 30);

        btnImage.setFont(new java.awt.Font("Lucida Grande", 1, 15)); // NOI18N
        btnImage.setForeground(new java.awt.Color(204, 0, 255));
        btnImage.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        btnImage.setText("Upload Image");
        btnImage.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(204, 0, 255)));
        btnImage.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                btnImageMouseClicked(evt);
            }
        });
        addFood.add(btnImage);
        btnImage.setBounds(50, 390, 260, 40);

        imageView.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        imageView.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(255, 255, 255)));
        addFood.add(imageView);
        imageView.setBounds(50, 150, 260, 220);

        btnSubmit.setFont(new java.awt.Font("Lucida Grande", 1, 14)); // NOI18N
        btnSubmit.setForeground(new java.awt.Color(0, 204, 51));
        btnSubmit.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        btnSubmit.setText("Submit");
        btnSubmit.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 204, 51)));
        btnSubmit.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                btnSubmitMouseClicked(evt);
            }
        });
        addFood.add(btnSubmit);
        btnSubmit.setBounds(440, 440, 110, 30);

        jLabel12.setForeground(new java.awt.Color(255, 255, 255));
        jLabel12.setText("Food ID");
        addFood.add(jLabel12);
        jLabel12.setBounds(50, 70, 49, 16);

        jLabel13.setForeground(new java.awt.Color(255, 255, 255));
        jLabel13.setText("Food Name");
        addFood.add(jLabel13);
        jLabel13.setBounds(370, 70, 80, 16);

        jLabel14.setForeground(new java.awt.Color(255, 255, 255));
        jLabel14.setText("Category");
        addFood.add(jLabel14);
        jLabel14.setBounds(370, 140, 70, 16);

        jLabel15.setForeground(new java.awt.Color(255, 255, 255));
        jLabel15.setText("Price");
        addFood.add(jLabel15);
        jLabel15.setBounds(370, 200, 30, 16);

        jLabel16.setForeground(new java.awt.Color(255, 255, 255));
        jLabel16.setText("Quantity");
        addFood.add(jLabel16);
        jLabel16.setBounds(370, 260, 70, 16);

        jLabel17.setForeground(new java.awt.Color(255, 255, 255));
        jLabel17.setText("Availability");
        addFood.add(jLabel17);
        jLabel17.setBounds(370, 320, 90, 30);

        txtfid.setEditable(false);
        addFood.add(txtfid);
        txtfid.setBounds(50, 90, 260, 30);
        addFood.add(txtfname);
        txtfname.setBounds(370, 90, 250, 30);

        cmbCategory.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
        addFood.add(cmbCategory);
        cmbCategory.setBounds(370, 160, 250, 27);
        addFood.add(txtprice);
        txtprice.setBounds(370, 220, 250, 30);
        addFood.add(txtquantity);
        txtquantity.setBounds(370, 280, 250, 30);

        cmbStatus.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Available", "Not-Available" }));
        addFood.add(cmbStatus);
        cmbStatus.setBounds(370, 350, 250, 30);

        txtpmsg.setForeground(new java.awt.Color(255, 255, 255));
        txtpmsg.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        txtpmsg.setText("Msg");
        addFood.add(txtpmsg);
        txtpmsg.setBounds(330, 400, 320, 16);

        txtImageurl.setBackground(new java.awt.Color(51, 51, 51));
        txtImageurl.setForeground(new java.awt.Color(51, 51, 51));
        txtImageurl.setBorder(null);
        addFood.add(txtImageurl);
        txtImageurl.setBounds(60, 460, 250, 16);

        foodTab.addTab("tab3", addFood);

        ViewFoods.setBackground(new java.awt.Color(51, 51, 51));
        ViewFoods.setLayout(null);

        txtTitle4.setFont(new java.awt.Font("Lucida Grande", 1, 14)); // NOI18N
        txtTitle4.setForeground(new java.awt.Color(255, 255, 255));
        txtTitle4.setText("View Products");
        ViewFoods.add(txtTitle4);
        txtTitle4.setBounds(280, 10, 110, 30);

        tblFoods.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null}
            },
            new String [] {
                "Product ID", "Product Name", "Price", "Available Quantity", "Availability"
            }
        ));
        jScrollPane4.setViewportView(tblFoods);

        ViewFoods.add(jScrollPane4);
        jScrollPane4.setBounds(10, 100, 640, 340);

        txtFoodSearch.setText("Search");
        txtFoodSearch.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                txtFoodSearchMouseClicked(evt);
            }
        });
        txtFoodSearch.addInputMethodListener(new java.awt.event.InputMethodListener() {
            public void inputMethodTextChanged(java.awt.event.InputMethodEvent evt) {
                txtFoodSearchInputMethodTextChanged(evt);
            }
            public void caretPositionChanged(java.awt.event.InputMethodEvent evt) {
            }
        });
        txtFoodSearch.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtFoodSearchKeyTyped(evt);
            }
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txtFoodSearchKeyPressed(evt);
            }
        });
        ViewFoods.add(txtFoodSearch);
        txtFoodSearch.setBounds(230, 50, 210, 30);

        btnViewFood.setFont(new java.awt.Font("Lucida Grande", 1, 14)); // NOI18N
        btnViewFood.setForeground(new java.awt.Color(255, 255, 255));
        btnViewFood.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        btnViewFood.setText("View");
        btnViewFood.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 255, 255)));
        btnViewFood.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                btnViewFoodMouseClicked(evt);
            }
        });
        ViewFoods.add(btnViewFood);
        btnViewFood.setBounds(290, 480, 120, 40);

        txtpmsg2.setForeground(new java.awt.Color(255, 255, 255));
        txtpmsg2.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        txtpmsg2.setText("Msg");
        ViewFoods.add(txtpmsg2);
        txtpmsg2.setBounds(170, 450, 370, 20);

        foodTab.addTab("tab4", ViewFoods);

        UpdateFoods.setBackground(new java.awt.Color(51, 51, 51));
        UpdateFoods.setLayout(null);

        jLabel18.setForeground(new java.awt.Color(255, 255, 255));
        jLabel18.setText("Food ID");
        UpdateFoods.add(jLabel18);
        jLabel18.setBounds(50, 70, 49, 16);

        txtfid1.setEditable(false);
        UpdateFoods.add(txtfid1);
        txtfid1.setBounds(50, 90, 260, 30);

        jLabel19.setForeground(new java.awt.Color(255, 255, 255));
        jLabel19.setText("Food Name");
        UpdateFoods.add(jLabel19);
        jLabel19.setBounds(370, 70, 80, 16);
        UpdateFoods.add(txtfname1);
        txtfname1.setBounds(370, 90, 250, 30);

        jLabel20.setForeground(new java.awt.Color(255, 255, 255));
        jLabel20.setText("Category");
        UpdateFoods.add(jLabel20);
        jLabel20.setBounds(370, 140, 70, 16);

        cmbCategory1.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
        UpdateFoods.add(cmbCategory1);
        cmbCategory1.setBounds(370, 160, 250, 27);

        jLabel21.setForeground(new java.awt.Color(255, 255, 255));
        jLabel21.setText("Price");
        UpdateFoods.add(jLabel21);
        jLabel21.setBounds(370, 200, 30, 16);
        UpdateFoods.add(txtprice1);
        txtprice1.setBounds(370, 220, 250, 30);

        jLabel22.setForeground(new java.awt.Color(255, 255, 255));
        jLabel22.setText("Quantity");
        UpdateFoods.add(jLabel22);
        jLabel22.setBounds(370, 260, 70, 16);
        UpdateFoods.add(txtquantity1);
        txtquantity1.setBounds(370, 280, 250, 30);

        jLabel23.setForeground(new java.awt.Color(255, 255, 255));
        jLabel23.setText("Availability");
        UpdateFoods.add(jLabel23);
        jLabel23.setBounds(370, 320, 90, 30);

        cmbStatus1.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Available", "Not-Available" }));
        UpdateFoods.add(cmbStatus1);
        cmbStatus1.setBounds(370, 350, 250, 30);

        txtpmsg1.setForeground(new java.awt.Color(255, 255, 255));
        txtpmsg1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        txtpmsg1.setText("Msg");
        UpdateFoods.add(txtpmsg1);
        txtpmsg1.setBounds(330, 400, 320, 16);

        btnPUpdate.setFont(new java.awt.Font("Lucida Grande", 1, 14)); // NOI18N
        btnPUpdate.setForeground(new java.awt.Color(0, 204, 51));
        btnPUpdate.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        btnPUpdate.setText("Update");
        btnPUpdate.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 204, 51)));
        btnPUpdate.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                btnPUpdateMouseClicked(evt);
            }
        });
        UpdateFoods.add(btnPUpdate);
        btnPUpdate.setBounds(440, 440, 110, 30);

        btnImage1.setFont(new java.awt.Font("Lucida Grande", 1, 15)); // NOI18N
        btnImage1.setForeground(new java.awt.Color(204, 0, 255));
        btnImage1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        btnImage1.setText("Upload Image");
        btnImage1.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(204, 0, 255)));
        btnImage1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                btnImage1MouseClicked(evt);
            }
        });
        UpdateFoods.add(btnImage1);
        btnImage1.setBounds(50, 390, 260, 40);

        imageView1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        imageView1.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(255, 255, 255)));
        UpdateFoods.add(imageView1);
        imageView1.setBounds(50, 150, 260, 220);

        txtImageurl1.setBackground(new java.awt.Color(51, 51, 51));
        txtImageurl1.setForeground(new java.awt.Color(51, 51, 51));
        txtImageurl1.setBorder(null);
        UpdateFoods.add(txtImageurl1);
        txtImageurl1.setBounds(60, 460, 250, 16);

        foodTab.addTab("tab5", UpdateFoods);

        mainPanel.add(foodTab);
        foodTab.setBounds(260, 41, 680, 570);

        Heading1.setFont(new java.awt.Font("Lucida Sans", 1, 24)); // NOI18N
        Heading1.setForeground(new java.awt.Color(255, 255, 255));
        Heading1.setText("Category");
        mainPanel.add(Heading1);
        Heading1.setBounds(70, 100, 120, 29);

        Heading2.setFont(new java.awt.Font("Lucida Sans", 1, 24)); // NOI18N
        Heading2.setForeground(new java.awt.Color(255, 255, 255));
        Heading2.setText("Manage Foods");
        mainPanel.add(Heading2);
        Heading2.setBounds(40, 40, 190, 29);

        btnAddFood.setForeground(new java.awt.Color(255, 255, 0));
        btnAddFood.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        btnAddFood.setText("Add Food");
        btnAddFood.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(255, 255, 51)));
        btnAddFood.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        btnAddFood.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                btnAddFoodMouseClicked(evt);
            }
        });
        mainPanel.add(btnAddFood);
        btnAddFood.setBounds(60, 320, 140, 38);

        btnUpdateFoods.setForeground(new java.awt.Color(255, 255, 0));
        btnUpdateFoods.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        btnUpdateFoods.setText("View Foods");
        btnUpdateFoods.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(255, 255, 51)));
        btnUpdateFoods.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        btnUpdateFoods.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                btnUpdateFoodsMouseClicked(evt);
            }
        });
        mainPanel.add(btnUpdateFoods);
        btnUpdateFoods.setBounds(60, 390, 140, 38);

        txtTitle1.setFont(new java.awt.Font("Lucida Grande", 1, 18)); // NOI18N
        txtTitle1.setForeground(new java.awt.Color(255, 255, 255));
        txtTitle1.setText("On-Table Ordering System");
        mainPanel.add(txtTitle1);
        txtTitle1.setBounds(460, 10, 251, 30);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(mainPanel, javax.swing.GroupLayout.DEFAULT_SIZE, 949, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(mainPanel, javax.swing.GroupLayout.DEFAULT_SIZE, 618, Short.MAX_VALUE)
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void btnExitMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnExitMouseClicked

        this.setVisible(false);
    }//GEN-LAST:event_btnExitMouseClicked

    private void btnUpdateCategoryMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnUpdateCategoryMouseClicked
        foodTab.setSelectedIndex(1);
        
    }//GEN-LAST:event_btnUpdateCategoryMouseClicked

    private void btnAddcategoryMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnAddcategoryMouseClicked
        foodTab.setSelectedIndex(0);
    }//GEN-LAST:event_btnAddcategoryMouseClicked

    private void btnAddFoodMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnAddFoodMouseClicked
        foodTab.setSelectedIndex(2);
    }//GEN-LAST:event_btnAddFoodMouseClicked

    private void btnUpdateFoodsMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnUpdateFoodsMouseClicked
        foodTab.setSelectedIndex(3);
        getAllFoods();
    }//GEN-LAST:event_btnUpdateFoodsMouseClicked

    private void btnCsubmitMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnCsubmitMouseClicked
       
        if(txtcname.getText().isEmpty())
        {
            txtcmsg.setVisible(true);
            txtcmsg.setText("Error : Please Enter Category Name");
        }else if(txtcdesc.getText().isEmpty())
        {
            txtcmsg.setVisible(true);
            txtcmsg.setText("Error : Please Enter Category Description");
        }else {
            
            try {
                String ID=txtcid.getText();
                String name=txtcname.getText();
                String desc=txtcdesc.getText();

                Category ct=new Category(ID, name, desc, 0);

                DBCategory dbc=new DBCategory();
                boolean rs=dbc.addCategory(ct);

                if(rs)
                {
                    txtcmsg.setVisible(true);
                    txtcmsg.setText("Success : Category Details Added Successfully");
                    getLastId();
                    txtcname.setText("");
                    txtcdesc.setText("");
                    
                }else{
                    
                    txtcmsg.setVisible(true);
                    txtcmsg.setText("Error : Please check the entered details");
                }
            } catch (Exception e) {
                
                e.printStackTrace();
            }
            
            
            
            
            
        }
    }//GEN-LAST:event_btnCsubmitMouseClicked

    private void btnUpdateMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnUpdateMouseClicked
        if(txtcname1.getText().isEmpty())
        {
            txtcmsg1.setVisible(true);
            txtcmsg1.setText("Error : Please Enter Category Name");
        }else if(txtcdesc1.getText().isEmpty())
        {
            txtcmsg1.setVisible(true);
            txtcmsg1.setText("Error : Please Enter Category Description");
        }else {
            
            try {
                String ID=txtcid1.getText();
                String name=txtcname1.getText();
                String desc=txtcdesc1.getText();
                int availability=cmbAvailability.getSelectedIndex();

                Category ct=new Category(ID, name, desc, availability);

                DBCategory dbc=new DBCategory();
                boolean rs=dbc.updateCategory(ct);

                if(rs)
                {
                    txtcmsg1.setVisible(true);
                    txtcmsg1.setText("Success : Category Details Updated Successfully");
                    getAllCategories();
                    txtcname1.setText("");
                    txtcdesc1.setText("");
                    
                }else{
                    
                    txtcmsg1.setVisible(true);
                    txtcmsg1.setText("Error : Please check the entered details");
                }
            } catch (Exception e) {
                
                e.printStackTrace();
            }
            
        }
    }//GEN-LAST:event_btnUpdateMouseClicked

    private void btnViewMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnViewMouseClicked
          int row = tblCategory.getSelectedRow();
        
            String ID=tblCategory.getValueAt(row, 0).toString();

            DBCategory dbc=new DBCategory();
            Category us=dbc.getCategory(ID);

           txtcid1.setText(ID);
           cmbAvailability.setSelectedIndex(us.getStatus());
           txtcname1.setText(us.getcName());
           txtcdesc1.setText(us.getDiscription());
    }//GEN-LAST:event_btnViewMouseClicked

    private void btnImageMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnImageMouseClicked
        setimage();
    }//GEN-LAST:event_btnImageMouseClicked

    private void btnSubmitMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnSubmitMouseClicked
       
        
        if(txtImageurl.getText().isEmpty())
        {
            txtpmsg.setVisible(true);
            txtpmsg.setText("Error : Upload Food Image");
        }else
        if(txtfname.getText().isEmpty())
        {
            txtpmsg.setVisible(true);
            txtpmsg.setText("Error : Enter Food Name");
        }else if(txtprice.getText().isEmpty())
        {
            txtpmsg.setVisible(true);
            txtpmsg.setText("Error : Enter Food Price");      
        }else if(txtquantity.getText().isEmpty())
        {
            txtpmsg.setVisible(true);
            txtpmsg.setText("Error : Enter Food Quantity");
        }else{
            

            String pid=txtfid.getText();
            String pname=txtfname.getText();
            
             String item=cmbCategory.getSelectedItem().toString();
             int count=item.length();
             
            String cid=item.substring(count-4).trim();
            int price=Integer.parseInt(txtprice.getText());
            int quantity=Integer.parseInt(txtquantity.getText());
            int availability=cmbStatus.getSelectedIndex();
            String image=txtImageurl.getText();
            
                       Food fd=new Food();
                       fd.setPid(pid);
                       fd.setPname(pname);
                       fd.setCid(cid);
                       fd.setPrice(price);
                       fd.setQuantity(quantity);
                       fd.setAvailability(availability);
                       fd.setImage(image);
            DBFood dbf=new DBFood();
            boolean rs=dbf.addFood(fd);
            
            if(rs)
            {
                txtpmsg.setVisible(true);
                txtpmsg.setText("Success : Product Added Seccessfully");
                
                getLastFoodId();
                txtfname.setText("");
                cmbCategory.setSelectedIndex(0);
                txtprice.setText("");
                txtquantity.setText("");
                cmbStatus.setSelectedIndex(0);
                txtImageurl.setText("");
                imageView.setIcon(null);
                
            }else{
                txtpmsg.setVisible(true);
                txtpmsg.setText("Error : Please check entered details");
            }
        }
    }//GEN-LAST:event_btnSubmitMouseClicked

    private void txtFoodSearchKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtFoodSearchKeyTyped
          DBFood dbu=new DBFood();
        
        
            List<Food> al= dbu.getSearchedProducts(txtFoodSearch.getText());
        
            DefaultTableModel model=(DefaultTableModel)tblFoods.getModel();
            model.setRowCount(0);
            Object[] row=new Object[5];
            
            for(int i=0;i<al.size();i++)
                {
                    row[0]=al.get(i).getPid();
                    row[1]=al.get(i).getPname();
                    row[2]=al.get(i).getPrice();
                    row[3]=al.get(i).getQuantity();

                    if(al.get(i).getAvailability()==0){

                        row[4]="Available";
                    }else{
                        
                        row[4]="Not Available";
                    }
                    
                    
                    model.addRow(row);
                }   
            
    }//GEN-LAST:event_txtFoodSearchKeyTyped

    private void txtFoodSearchMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_txtFoodSearchMouseClicked
        txtFoodSearch.setText("");
    }//GEN-LAST:event_txtFoodSearchMouseClicked

    private void txtFoodSearchKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtFoodSearchKeyPressed
        
    }//GEN-LAST:event_txtFoodSearchKeyPressed

    private void txtFoodSearchInputMethodTextChanged(java.awt.event.InputMethodEvent evt) {//GEN-FIRST:event_txtFoodSearchInputMethodTextChanged
        
    }//GEN-LAST:event_txtFoodSearchInputMethodTextChanged

    int index;
    private void btnViewFoodMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnViewFoodMouseClicked
        foodTab.setSelectedIndex(4);
        try {
             int row = tblFoods.getSelectedRow();
        
         String ID=tblFoods.getValueAt(row, 0).toString();

         DBFood dbc=new DBFood();
         Food us=dbc.getFood(ID);
         
                txtfid1.setText(ID);
                txtfname1.setText(us.getPname());
                txtprice1.setText(String.valueOf(us.getPrice()));
                txtquantity1.setText(String.valueOf(us.getQuantity()));
                cmbStatus1.setSelectedIndex(us.getAvailability());
                
                    DBFood dbf=new DBFood();
                    List<Category> rs=dbf.getCategory();

                    String rw[]=new String[rs.size()];

                    
                    for(int i=0;i<rs.size();i++)
                    {
                        rw[i]=rs.get(i).getcName()+" - "+rs.get(i).getcId();
                        
                        if(rs.get(i).getcId().equals(us.getCid()))
                        {
                            index=i;
                        }
                    }

                    cmbCategory1.setModel(new DefaultComboBoxModel(rw));
                    cmbCategory1.setSelectedIndex(index);
                    
                    Blob aBlob = us.getImg();
                    byte[] imageByte = aBlob.getBytes(1, (int) aBlob.length());
                    InputStream is=new ByteArrayInputStream(imageByte);
                    BufferedImage imag=ImageIO.read(is);
                    Image image = imag;
                    Image newImage=image.getScaledInstance(imageView1.getWidth(), imageView1.getHeight(), Image.SCALE_SMOOTH);
                    ImageIcon foodImage=new ImageIcon(newImage);
                    imageView1.setIcon(foodImage);
                    
                    
                
        } catch (Exception e) {
            e.printStackTrace();
        }
        

    }//GEN-LAST:event_btnViewFoodMouseClicked

    
    boolean rs;
    private void btnPUpdateMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnPUpdateMouseClicked
            
        if(txtfname1.getText().isEmpty())
        {
            txtpmsg1.setVisible(true);
            txtpmsg1.setText("Error : Enter Food Name");
        }else if(txtprice1.getText().isEmpty())
        {
            txtpmsg1.setVisible(true);
            txtpmsg1.setText("Error : Enter Food Price");      
        }else if(txtquantity1.getText().isEmpty())
        {
            txtpmsg1.setVisible(true);
            txtpmsg1.setText("Error : Enter Food Quantity");
        }else{
            

            String pid=txtfid1.getText();
            String pname=txtfname1.getText();
            
             String item=cmbCategory1.getSelectedItem().toString();
             int count=item.length();
             
            String cid=item.substring(count-4).trim();
            int price=Integer.parseInt(txtprice1.getText());
            int quantity=Integer.parseInt(txtquantity1.getText());
            int availability=cmbStatus1.getSelectedIndex();
            String image=txtImageurl1.getText();
            
            if(image.isEmpty())
            {
                 Food fd=new Food();
                       fd.setPid(pid);
                       fd.setPname(pname);
                       fd.setCid(cid);
                       fd.setPrice(price);
                       fd.setQuantity(quantity);
                       fd.setAvailability(availability);
                       
                       DBFood dbf=new DBFood();
                       rs=dbf.updateFoodWithoutImage(fd);
            }else{
                Food fd=new Food();
                       fd.setPid(pid);
                       fd.setPname(pname);
                       fd.setCid(cid);
                       fd.setPrice(price);
                       fd.setQuantity(quantity);
                       fd.setAvailability(availability);
                       fd.setImage(image);
                       DBFood dbf=new DBFood();
                       rs=dbf.updateFoodWithImage(fd);
            }
                      
            
            if(rs)
            {
                txtpmsg2.setVisible(true);
                txtpmsg2.setText("Success : Product Updated Seccessfully");
                foodTab.setSelectedIndex(3);
                getAllFoods();
                
            }else{
                txtpmsg1.setVisible(true);
                txtpmsg1.setText("Error : Please check entered details");
            }
        }
        
    }//GEN-LAST:event_btnPUpdateMouseClicked

    private void btnImage1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnImage1MouseClicked
        setimage2();
    }//GEN-LAST:event_btnImage1MouseClicked

      public void setimage2()
   {
       JFileChooser fc=new JFileChooser();
        fc.setFileFilter(new FileNameExtensionFilter("Image Files", "jpg","png"));
        fc.showOpenDialog(this);
        File f=fc.getSelectedFile();
        String path=f.getAbsolutePath();
        
        ImageIcon image = new ImageIcon(path);
        Image img=image.getImage();
        Image newImage=img.getScaledInstance(imageView1.getWidth(), imageView1.getHeight(), Image.SCALE_SMOOTH);
        ImageIcon foodImage=new ImageIcon(newImage);
        imageView1.setIcon(foodImage); 
        txtImageurl1.setText(path);
        
   }
    public void setimage()
   {
       JFileChooser fc=new JFileChooser();
        fc.setFileFilter(new FileNameExtensionFilter("Image Files", "jpg","png"));
        fc.showOpenDialog(this);
        File f=fc.getSelectedFile();
        String path=f.getAbsolutePath();
        
        ImageIcon image = new ImageIcon(path);
        Image img=image.getImage();
        Image newImage=img.getScaledInstance(imageView.getWidth(), imageView.getHeight(), Image.SCALE_SMOOTH);
        ImageIcon foodImage=new ImageIcon(newImage);
        imageView.setIcon(foodImage); 
        txtImageurl.setText(path);
        
   }
     
    public void getLastFoodId()
    {
        DBFood dbc=new DBFood();
        String ID=dbc.lastID();
        
        
        txtfid.setText(ID);
    }
    
     public void getAllFoods()
    {
        
        
        DBFood dbu=new DBFood();
        
        
        List<Food> al= dbu.getAllProducts();
        
            DefaultTableModel model=(DefaultTableModel)tblFoods.getModel();
            model.setRowCount(0);
            Object[] row=new Object[5];
            
            for(int i=0;i<al.size();i++)
                {
                    row[0]=al.get(i).getPid();
                    row[1]=al.get(i).getPname();
                    row[2]=al.get(i).getPrice();
                    row[3]=al.get(i).getQuantity();

                    if(al.get(i).getAvailability()==0){

                        row[4]="Available";
                    }else{
                        
                        row[4]="Not Available";
                    }
                    
                    
                    model.addRow(row);
                }
            
            
    }
    
    public void setCategories()
    {
        DBFood dbf=new DBFood();
        List<Category> rs=dbf.getCategory();
        
        String row[]=new String[rs.size()];

        
        for(int i=0;i<rs.size();i++)
        {
            row[i]=rs.get(i).getcName()+" - "+rs.get(i).getcId();
        }
        
        cmbCategory.setModel(new DefaultComboBoxModel(row));
        
    }
    
    public void getLastId()
    {
        DBCategory dbc=new DBCategory();
        String ID=dbc.lastID();
        
        
        txtcid.setText(ID);
    }
    
    
      public void getAllCategories()
    {
        
        
        DBCategory dbu=new DBCategory();
        
        
        List<Category> al= dbu.getAllCategory();
        
        DefaultTableModel model=(DefaultTableModel)tblCategory.getModel();
            model.setRowCount(0);
            Object[] row=new Object[4];
            
            for(int i=0;i<al.size();i++)
                {
                    row[0]=al.get(i).getcId();
                    row[1]=al.get(i).getcName();
                    row[2]=al.get(i).getDiscription();
                    if(al.get(i).getStatus()==0){

                        row[3]="Available";
                    }else{
                        
                        row[3]="Not Available";
                    }
                    
                    
                    model.addRow(row);
                }
            
            
    }
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(ManageFood.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(ManageFood.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(ManageFood.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(ManageFood.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new ManageFood().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel Heading;
    private javax.swing.JLabel Heading1;
    private javax.swing.JLabel Heading2;
    private javax.swing.JPanel UpdateFoods;
    private javax.swing.JPanel ViewFoods;
    private javax.swing.JPanel addCategory;
    private javax.swing.JPanel addFood;
    private javax.swing.JLabel btnAddFood;
    private javax.swing.JLabel btnAddcategory;
    private javax.swing.JLabel btnCsubmit;
    private javax.swing.JLabel btnExit;
    private javax.swing.JLabel btnImage;
    private javax.swing.JLabel btnImage1;
    private javax.swing.JLabel btnPUpdate;
    private javax.swing.JLabel btnSubmit;
    private javax.swing.JLabel btnUpdate;
    private javax.swing.JLabel btnUpdateCategory;
    private javax.swing.JLabel btnUpdateFoods;
    private javax.swing.JLabel btnView;
    private javax.swing.JLabel btnViewFood;
    private javax.swing.JComboBox<String> cmbAvailability;
    private javax.swing.JComboBox<String> cmbCategory;
    private javax.swing.JComboBox<String> cmbCategory1;
    private javax.swing.JComboBox<String> cmbStatus;
    private javax.swing.JComboBox<String> cmbStatus1;
    private javax.swing.JTabbedPane foodTab;
    private javax.swing.JLabel imageView;
    private javax.swing.JLabel imageView1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel15;
    private javax.swing.JLabel jLabel16;
    private javax.swing.JLabel jLabel17;
    private javax.swing.JLabel jLabel18;
    private javax.swing.JLabel jLabel19;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel20;
    private javax.swing.JLabel jLabel21;
    private javax.swing.JLabel jLabel22;
    private javax.swing.JLabel jLabel23;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JScrollPane jScrollPane4;
    private javax.swing.JSeparator jSeparator1;
    private javax.swing.JPanel mainPanel;
    private javax.swing.JTable tblCategory;
    private javax.swing.JTable tblFoods;
    private javax.swing.JTextField txtFoodSearch;
    private javax.swing.JLabel txtFooter;
    private javax.swing.JTextField txtImageurl;
    private javax.swing.JTextField txtImageurl1;
    private javax.swing.JLabel txtTitle;
    private javax.swing.JLabel txtTitle1;
    private javax.swing.JLabel txtTitle2;
    private javax.swing.JLabel txtTitle3;
    private javax.swing.JLabel txtTitle4;
    private javax.swing.JTextArea txtcdesc;
    private javax.swing.JTextArea txtcdesc1;
    private javax.swing.JTextField txtcid;
    private javax.swing.JTextField txtcid1;
    private javax.swing.JLabel txtcmsg;
    private javax.swing.JLabel txtcmsg1;
    private javax.swing.JTextField txtcname;
    private javax.swing.JTextField txtcname1;
    private javax.swing.JTextField txtfid;
    private javax.swing.JTextField txtfid1;
    private javax.swing.JTextField txtfname;
    private javax.swing.JTextField txtfname1;
    private javax.swing.JLabel txtpmsg;
    private javax.swing.JLabel txtpmsg1;
    private javax.swing.JLabel txtpmsg2;
    private javax.swing.JTextField txtprice;
    private javax.swing.JTextField txtprice1;
    private javax.swing.JTextField txtquantity;
    private javax.swing.JTextField txtquantity1;
    private javax.swing.JPanel updateCategory;
    // End of variables declaration//GEN-END:variables
}
